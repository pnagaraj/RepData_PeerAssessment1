fnameattr<-"~/Documents/coursera/UCI HAR Dataset//features.txt"
fnameact<-"~/Documents/coursera/UCI HAR Dataset/activity_labels.txt"
# inti filename: subject id
fnametestsub<-"~/Documents/coursera/UCI HAR Dataset/test/subject_test.txt"
fnametrainsub<-"~/Documents/coursera/UCI HAR Dataset/train/subject_train.txt"
# Read the feature names,clean names
fdataattr<-readLines(fnameattr,n=-1)
attr.sub<-gsub("\\()" , "" ,fdataattr)
attr.sub<-gsub("," , "-" ,attr.sub)
attr.sub<-gsub("\\(" , "-" ,attr.sub)
attr.sub<-gsub("\\)" , "" ,attr.sub)
attr.tab<-read.table(textConnection(attr.sub))
# Read the subject id
fdatatestsub<-read.table(fnametestsub,col.names="subject")
fdatatrainsub<-read.table(fnametrainsub,col.names="subject")
# Read the activity levels, convert to readable text
fdataact<-read.table(fnameact)
ff<-sub("ING","",fdataact$V2) # remove "ING"
# implementdescriptive names in second col
# read ytest data
fdatatesty<-read.table(fnametestY)
# replace all categories with their activity labels
fe<-ff[1]
actlev<-gsub("1",fe,fdatatesty)
fe<-ff[2]
actlev<-gsub("2",fe,actlev)
fe<-ff[3]
actlev<-gsub("3",fe,actlev)
fe<-ff[4]
actlev<-gsub("4",fe,actlev)
fe<-ff[5]
actlev<-gsub("5",fe,actlev)
fe<-ff[6]
actlev<-gsub("6",fe,actlev)
# train Y:implementdescriptive names in second col
# read ytest data
fdatatrainy<-read.table(fnametrainY)
# replace all categories with their activity labels
fe<-ff[1]
actlev2<-gsub("1",fe,fdatatrainy)
fe<-ff[2]
actlev2<-gsub("2",fe,actlev2)
fe<-ff[3]
actlev2<-gsub("3",fe,actlev2)
fe<-ff[4]
actlev2<-gsub("4",fe,actlev2)
fe<-ff[5]
actlev2<-gsub("5",fe,actlev2)
fe<-ff[6]
actlev2<-gsub("6",fe,actlev2)
names(actlev)
class(actlev)
actlve
actlev
?read.table
fdatatesty<-readLines(fnametestY,n=-1)
# replace all categories with their activity labels
fe<-ff[1]
actlev<-gsub("1",fe,fdatatesty)
fe<-ff[2]
actlev<-gsub("2",fe,actlev)
fe<-ff[3]
actlev<-gsub("3",fe,actlev)
fe<-ff[4]
actlev<-gsub("4",fe,actlev)
fe<-ff[5]
actlev<-gsub("5",fe,actlev)
fe<-ff[6]
actlev<-gsub("6",fe,actlev)
actlev<-read.table(textConnection(actlev),col.names="activity")
# train Y:implementdescriptive names in second col
# read ytest data
fdatatrainy<-readLines(fnametrainY,n=-1)
# replace all categories with their activity labels
fe<-ff[1]
actlev2<-gsub("1",fe,fdatatrainy)
fe<-ff[2]
actlev2<-gsub("2",fe,actlev2)
fe<-ff[3]
actlev2<-gsub("3",fe,actlev2)
fe<-ff[4]
actlev2<-gsub("4",fe,actlev2)
fe<-ff[5]
actlev2<-gsub("5",fe,actlev2)
fe<-ff[6]
actlev2<-gsub("6",fe,actlev2)
actlev2<-read.table(textConnection(actlev2),col.names="activity")
class(actlev)
names(actlev)
fdatatestX<-read.table(fnametestX,col.names=as.character(attr.tab[,2]))
fdatatestY<-actlev
#read.table(fnametestY,col.names="activity")
# Read the train data X and bi
fdatatrainX<-read.table(fnametrainX,col.names=as.character(attr.tab[,2]))
fdatatrainY<-actlev2
#read.table(fnametrainY,col.names="activity")
# merge subject id of train and test data
fdatasub<-rbind(fdatatrainsub,fdatatestsub)
#merge train and test data
fdatatrain<-cbind(fdatatrainX,fdatatrainY)
fdatatest<-cbind(fdatatestX,fdatatestY)
fdata<-rbind(fdatatrain,fdatatest)
#append subject column
fdata<-cbind(fdata,fdatasub)
# get col indices that have mean in the feature name
# also get col indices that have subject and activity data
colidxmean<-grep("mean",tolower(attr.sub))
colidxstd<-grep("std",tolower(attr.sub))
colidx<-c(colidxmean,colidxstd,562,563)
# extract cols that have mean or std
fdatasel<-fdata[,colidx]
# calculate mean for each activity and each subject
agg<-aggregate(fdatasel,by=list(fdatasel$subject,fdatasel$activity),FUN=mean,na.rm=TRUE)
# write tidy data table
write.table(agg,file="~/Documents/coursera/tidydata",row.name=FALSE)
names(fdata)
head(fdata)
agg<-aggregate(fdatasel,by=list(fdatasel$subject,as.factor(fdatasel$activity)),FUN=mean,na.rm=TRUE)
str(fdatasel)
agg<-aggregate(fdatasel,by=list(fdatasel$subject,as.factor(fdatasel$activity)),FUN=mean,na.rm=TRUE)
warning()
warnings()
warnings(agg)
?cat
ff<-sub("TT","T",ff)
ff
ff<-sub("\\_","",ff)
ff
agg<-aggregate(fdatasel,by=list(fdatasel$subject,as.vector(fdatasel$activity)),FUN=mean,na.rm=TRUE)
agg<-aggregate(fdatasel,by=list(fdatasel$subject,as.character(fdatasel$activity)),FUN=mean,na.rm=TRUE)
warnings(agg)
# Read the test data X,Y
fdatatestX<-read.table(fnametestX,col.names=as.character(attr.tab[,2]))
fdatatestY<-read.table(fnametestY,col.names="activity_level")
# Read the train data X and bi
fdatatrainX<-read.table(fnametrainX,col.names=as.character(attr.tab[,2]))
fdatatrainY<-read.table(fnametrainY,col.names="activity_level")
# merge subject id of train and test data
fdatasub<-rbind(fdatatrainsub,fdatatestsub)
#merge train and test data
fdatatrain<-cbind(fdatatrainX,fdatatrainY)
fdatatrain<-cbind(fdatatrain,actlev2)
fdatatest<-cbind(fdatatestX,fdatatestY)
fdatatest<-cbind(fdatatest,actlev)
fdata<-rbind(fdatatrain,fdatatest)
#append subject column
fdata<-cbind(fdata,fdatasub)
# get col indices that have mean in the feature name
# also get col indices that have subject and activity data
colidxmean<-grep("mean",tolower(attr.sub))
colidxstd<-grep("std",tolower(attr.sub))
colidx<-c(colidxmean,colidxstd,562,563)
# extract cols that have mean or std
fdatasel<-fdata[,colidx]
# calculate mean for each activity and each subject
agg<-aggregate(fdatasel,by=list(fdatasel$subject,fdatasel$activity_level,FUN=mean,na.rm=TRUE)
# write tidy data table
write.table(agg,file="~/Documents/coursera/tidydata",row.name=FALSE)
names(ag)
names(agg)
names(fdata)
colidxmean<-grep("mean",tolower(attr.sub))
colidxstd<-grep("std",tolower(attr.sub))
colidx<-c(colidxmean,colidxstd,562,563,564)
# extract cols that have mean or std
fdatasel<-fdata[,colidx]
# calculate mean for each activity and each subject
agg<-aggregate(fdatasel,by=list(fdatasel$subject,fdatasel$activity_level,FUN=mean,na.rm=TRUE)
# write tidy data table
write.table(agg,file="~/Documents/coursera/tidydata",row.name=FALSE)
names(fdata)
head(fdata)
head(agg)
?aggregate
?split
x<-split(fdatasel,list(fdatasel$subject,fdatasel$activity_level))
head(x)
names(x)
class(x)
tail(x)
?subset
subset(x,activity_level==1)
subset(x,x$activity_level==1)
str(x)
x[1:100]$subject
x[1:100]$activity
?merge
names(agg)
head(agg)
colidx
names(fdatasel)
head(fdatasel)
fdatasel$activity_level
agg<-aggregate(fdatasel,by=list(fdatasel$subject,fdatasel$activity_level,FUN=mean,na.rm=TRUE)
)
agg<-aggregate(fdatasel,by=list(fdatasel$subject,fdatasel$activity_level),FUN=mean,na.rm=TRUE)
names(fdatasel)
colidx<-c(colidxmean,colidxstd,562,564,563)
# extract cols that have mean or std
fdatasel<-fdata[,colidx]
agg<-aggregate(fdatasel[,1:563],by=list(fdatasel$subject,fdatasel$activity_level),FUN=mean,na.rm=TRUE)
names(fdatasel)
agg<-aggregate(fdatasel[,1:88],by=list(fdatasel$subject,fdatasel$activity_level),FUN=mean,na.rm=TRUE)
names(agg)
head(agg)
x<-sapply(agg$activity_level,function(x) )
?gsub
x<-agg[value==1,agg$activity_level]
rownames
rownames(agg)
colnames(agg)
x<-agg[agg$activity_level==1,]
x
x<-agg[agg$activity_level==1,]
x<-agg
x[x$activity_level==1,]<-"WALK"
x[x$activity_level==1,]
x[x$activity_level==1,]
x<-agg
x[x$activity_level==1,]
x[x$activity_level==1,]<-as.character("WALK")
x[x$activity_level==1,]
x[x$activity_level==1,x$activity_level]<-as.character("WALK")
x<-agg
x[x$activity_level==1]<-"WALK"
x[x$activity_level==1,]
?replace
?rep
x<-agg
x[x==1]<-"WALK"
head(x)
x<-agg
x[x$activity_level==1]<-"WALK"
x<-agg
x[x$activity_level==1]<-"WALK"
head(x)
x[x$activity_level==1,]<-"WALK"
head(x)
?by
x<-by(agg[,1:88],list(agg$subject,agg$activity_level),colMeans)
head(x)
class(x)
str(by)
str(x)
x<-by(agg[,1:88],subject,colMeans)
x<-by(agg[,1:88],agg$subject,colMeans)
str(x)
x<-by(agg[,1:88],list(agg$subject,agg$activity_level),colMeans)
str(x)
?aggregate
setwd("Documents/coursera/reproducibleresearch_w2/")
ls
cd code
setwd("code")
ls
list.files()
unzip("activity.zip")
list.files()
ls doc
!Rnw weave = knitr
nvar
?list
x=rnorm(10)
list(x)
x
?tapply
c(x)
y<-c("2007-06-22","2004-02-13")
as.Date(y)
mydates<-as.Date(y)
days<-mydates[1]-mydates[2]
days
?hist
x<-read.csv("activity.csv")
str(x$date[[]])
str(x$date)
str(x$date[[1]])
str(x$date[[1]][1])
str(x$date[1][1])
str(x$date[2][1])
x$data[[1]]
x$date[[1]]
table(x$date)
y<-as.Date(x$date,"%Y-%m-%d")
whos y
str(y)
y(1)
y[1]
hist(x,y)
hist(x$steps,y)
ncol(x)
str(x)
hist(x$steps,y)
aggregate(x$steps,by=list(y),FUN=sum)
agg<-aggregate(x$steps,by=list(y),FUN=sum)
hist(agg,y)
agg
hist(agg)
hist(agg(:,2),agg(:,1))
hist(agg[:,2],agg[:,1])
hist(agg[:,2])
agg[:,1:2]
str(agg)
hist(agg)
hist(as.vector(agg[:,2]))
agg[1,2]
agg[1,3]
agg[,2]
hist(as.vector(agg[,2]),as.vector(agg[,1]))
hist(as.vector(x[,2]),as.vector(x[,1]))
str(x)
hist(as.vector(x[,2])
)
hist(as.vector(x[,1]))
hist(as.vector(x[,1]),"days")
days(x[,2])
str(x)
weekdays(x$date)
weekdays(y)
hist(as.vector(x[,1]),y)
?as.Date
?hist
hist(as.vector(agg[,2]),as.vector(agg[,1]))
agg<-aggregate(x$steps,by=list(y),FUN=sum)
agg
str(agg)
str(x)
c(x$date)
c(x$date[9981:2000])
hist(as.vector(x$steps),breaks=c(x$date))
hist(as.vector(x$steps))
nrow(x$steps)
str(x)
nrow(x)
ncol(x$steps)
hist(as.vector(x$steps))
hist(as.vector(x$steps),breaks=c(x$date))
truehist(as.vector(x$steps),breaks=c(x$date))
?hist
hist(as.vector(x$steps),breaks=c(x$date),warn.unused = FALSE)
hist(as.vector(as.numeric(x$steps),breaks=c(x$date),warn.unused = FALSE)
)
hist(as.vector(as.numeric(x$steps)),breaks=c(x$date),warn.unused = FALSE)
as.numeric(x$steps)
final<-subset(x,!(is.na(x["nsteps"])))
final<-subset(x,!(is.na(x["steps"])))
nrow(final)
ncol(final)
nrow(x)
hist(as.vector(as.numeric(final$steps)),breaks=c(final$date),warn.unused = FALSE)
c(final$date)
hist(as.vector(as.numeric(final$steps)),breaks=c(final$date),warn.unused = FALSE)
y
agg
hist(agg)
hist(as.vector(agg[,2])
)
?hist
y<-as.Date(x$date,"%Y-%m-%d")
agg<-aggregate(x$steps,by=list(y),FUN=sum)
hist(agg)
hist(as.vector(agg$steps),breaks=10)
str(agg$steps)
agg
colnames(agg)
str(x$steps)
agg<-aggregate(x$steps,by=list(y),FUN=sum)
colnames(agg)
str(y)
str(list(y))
colnames(agg)
agg<-aggregate(x$steps,by=list(y),FUN=sum)
colnames(agg)
hist(as.vector(agg[,2]),breaks=10)
?hist
hist(as.vector(agg[,2]),breaks=10,main="Histogram of total steps per day",xlab="total steps per day",ylab="frequency")
colnames(x)
agg<-aggregate(x$steps,by=list(y),FUN=sum)
?barplot
barplot(as.vector(agg[,2]))
?barplot
barplot(agg)
barplot(as.matrix(agg))
?barplot
?table
counts<-table(x$steps)
counts
final<-subset(x,!(is.na(x["steps"])))
x$date[101:150]
?group
?split
str(x$date)
y<-split(x,x$date)
y[,101:150]
str(y)
y[[1]]
y[[2]]
as.vector(x$date)
c(x$date[9981:2000])
c(x$date)
c(x$date)
c(x$date)
str(c(x$date))
colnames(x)
x[101:150,3]
str(x)
?plot
?max
?which.max
agg<-aggregate(x$steps,by=list(x$interval),FUN=mean)
which.max(agg[,1])
colnames(agg)
which.max(agg[,2])
agg[101:150,1]
agg[101:150,2]
agg<-aggregate(x$steps,by=list(x$interval),FUN=mean)
agg[101:1500,2]
head(agg)
agg<-aggregate(x$steps,by=list(x$interval),FUN=mean)
str(x)
list(x$interval)
str(x)
x[101:150,1]
x[101:1500,1]
x<-subset(x,!(is.na(x$steps)))
agg<-aggregate(x$steps,by=list(x$interval),FUN=mean)
head(agg)
which.max(agg[,2])
xall<-read.csv("activity.csv")
xall$steps[is.na(xall$steps)]<-mean(xall$steps,na.rm=TRUE)
xall[101:150,2]
xall[101:150,1]
colnames(xall)
str(xall)
?weekdays
xall$days<-weekdays(xall$Date)
xall$days<-weekdays(xall$Date,"%Y-%m-%d")
xall$days<-weekdays(as.Date(xall$Date,"%Y-%m-%d")
)
str(xall)
xall$days<-weekdays(xall$date,"%Y-%m-%d")
xall$days<-weekdays(as.Date(xall$date,"%Y-%m-%d"))
xall$days[1:100]
xweek<-subset(xall,xall$date=="Saturday")
xweek<-subset(xall,xall$date=="Saturday" | xall$date=="Sunday")
nrow(xweek)
xweek<-subset(xall,xall$date=="Saturday")
nrow(xweek)
xall$date[151:200]
xweek<-subset(xall,xall$day=="Saturday")
nrow(xweek)
xweek<-subset(xall,xall$day=="Saturday" | xall$day=="Sunday")
nrow(xweek)
xweekend<-subset(xall,xall$day=="Saturday" | xall$day=="Sunday")
xweekday<-subset(xall,!(xall$day=="Saturday" | xall$day=="Sunday"))
str(xweekend)
str(xweekday)
xall$period<-ifelse(xall$days=="Saturday" | xall$days=="Sunday","Weekend","Weekday")
xall$period[101:150]
xall$period[151:250]
xall$period[151:1000]
?counts
?count
tmp<-subset(xall,xall$period=="Weekday")
nrow(tmp)
nrow(xall)
?factor
xall$period<-factor(xall$days=="Saturday" | xall$days=="Sunday")
levels(xall$period)
levels(xall$period)[levels(xall$period=="TRUE")]<-"Weekend"
str(xall)
xall$period[xall$period=="TRUE"]<"Weekend"
xall$period[xall$period=="TRUE"]<-"Weekend"
xall$period<-factor(xall$days=="Saturday" | xall$days=="Sunday")
str(xall)
levels(xall$period)[levels(xall$period=="TRUE")]<-"Weekend"
str(xall)
levels(xall$period)[levels(xall$period=="TRUE")]
levels(xall$period=="TRUE")
levels(xall)
levels(xall$date)
levels(xall$period)
levels(xall$period)=="TRUE"
levels(xall$period)[levels(xall$period)=="TRUE"]<-"Weekend"
str(xall)
agg<-aggregate(indatafull$steps,by=list(indatafull$interval),FUN=mean)
agg<-aggregate(xall$steps,by=list(xall$interval),FUN=mean)
agg<-aggregate(xall$steps,by=list(xall$interval,xall$period),FUN=mean)
agg
colnames(agg)
qplot(agg[,1],agg[,3],data=agg,facets=.~agg$Group.2)
library(ggplot2)
qplot(agg[,1],agg[,3],data=agg,facets=.~agg$Group.2)
qplot(agg[,1],agg$Group.2,data=agg,facets=.~agg$Group.1)
qplot(agg$x,agg$Group.2,data=agg,facets=.~agg$Group.1)
colnames(agg)
str(agg)
qplot(agg$Group.1,agg$x,data=agg,facets=.~agg$Group.2)
?qplot
str(agg)
levels(xall$period)[levels(xall$period)=="FALSE"]<-"Weekday"
agg<-aggregate(xall$steps,by=list(xall$interval,xall$period),FUN=mean)
str(agg)
qplot(agg$Group.1,agg$x,data=agg,facets=.~agg$Group.2)
?qplot
qplot(Group.1,x,data=agg,facets=.~Group.2)
?qplot
qplot(Group.1,x,data=agg,facets=.~Group.2,geom=c("point",smooth))
qplot(Group.1,x,data=agg,facets=.~Group.2,geom=c("point","smooth"))
qplot(Group.1,x,data=agg,facets=.~Group.2,geom=c("point","smooth"),method="lm")
qplot(Group.1,x,data=agg,facets=.~Group.2,geom=c("lne","smooth"),method="lm")
qplot(Group.1,x,data=agg,facets=.~Group.2,geom=c("line","smooth"),method="lm")
